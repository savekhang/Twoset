# =========================
# 0Ô∏è‚É£ Chu·∫©n b·ªã m√¥i tr∆∞·ªùng
# =========================
!pip install --upgrade ultralytics --quiet
from google.colab import drive
drive.mount('/content/drive', force_remount=True)

import os, shutil, glob, time
from ultralytics import YOLO

# =========================
# 1Ô∏è‚É£ Config
# =========================
DRIVE_DATASET = '/content/drive/MyDrive/datasets'         # Dataset tr√™n Drive
DATASET_LOCAL = '/content/datasets'                       # Copy v·ªÅ ƒë√¢y ƒë·ªÉ train nhanh h∆°n
DATA_YAML = f'{DATASET_LOCAL}/data.yaml'

PROJECT_DIR = '/content/yolo_runs'                        # Train trong /content
RUN_NAME = 'cigarette_vape_yolov11'
SAVE_DIR = '/content/drive/MyDrive/yolo_backup'           # Backup sang Drive

EPOCHS = 100
BATCH = 16
IMG_SIZE = 640
DEVICE = 'cpu'  # 'cpu' n·∫øu kh√¥ng c√≥ GPU, 0 n·∫øu mu·ªën d√πng GPU

# =========================
# 2Ô∏è‚É£ Copy dataset t·ª´ Drive v·ªÅ Content
# =========================
if os.path.exists(DATASET_LOCAL):
    shutil.rmtree(DATASET_LOCAL)
shutil.copytree(DRIVE_DATASET, DATASET_LOCAL)
print("‚úÖ Dataset ƒë√£ copy xong v·ªÅ Content!")

# =========================
# 3Ô∏è‚É£ Ki·ªÉm tra checkpoint ƒë·ªÉ resume t·ª´ Drive
# =========================
os.makedirs(SAVE_DIR, exist_ok=True)

# T√¨m file last.pt m·ªõi nh·∫•t trong Drive (backup tr∆∞·ªõc ƒë√≥)
drive_last_ckpts = sorted(glob.glob(os.path.join(SAVE_DIR, f"{RUN_NAME}_epoch*_last.pt")))
latest_drive_ckpt = drive_last_ckpts[-1] if drive_last_ckpts else None

local_last_weight = os.path.join(PROJECT_DIR, RUN_NAME, 'weights', 'last.pt')

if latest_drive_ckpt:
    print(f"üîÑ Ph√°t hi·ªán checkpoint m·ªõi nh·∫•t tr√™n Drive: {latest_drive_ckpt}")
    # Copy v·ªÅ local ƒë·ªÉ resume
    os.makedirs(os.path.dirname(local_last_weight), exist_ok=True)
    shutil.copy2(latest_drive_ckpt, local_last_weight)
    model = YOLO(local_last_weight)
    resume_flag = True
else:
    print("üöÄ Kh√¥ng c√≥ checkpoint. B·∫Øt ƒë·∫ßu train m·ªõi...")
    model = YOLO('yolov8n.pt')  # ho·∫∑c yolov8s.pt n·∫øu mu·ªën ch√≠nh x√°c h∆°n
    resume_flag = False

# =========================
# 4Ô∏è‚É£ Train v√† backup m·ªói epoch
# =========================

results = model.train(
    data=DATA_YAML,
    epochs=EPOCHS,
    imgsz=IMG_SIZE,
    batch=BATCH,
    device=DEVICE,
    patience=20,
    project=PROJECT_DIR,
    name=RUN_NAME,
    resume=resume_flag,
    save_period=1  # L∆∞u checkpoint m·ªói epoch
)

# =========================
# 5Ô∏è‚É£ Backup to√†n b·ªô checkpoint l√™n Drive
# =========================
weight_dir = os.path.join(PROJECT_DIR, RUN_NAME, 'weights')
epoch_files = sorted(glob.glob(os.path.join(weight_dir, '*.pt')))

for f in epoch_files:
    filename = os.path.basename(f)
    dst = os.path.join(SAVE_DIR, f"{RUN_NAME}_{filename}")
    shutil.copy2(f, dst)
    print(f"üíæ Backup {filename} -> {SAVE_DIR}")

# Backup lu√¥n to√†n b·ªô th∆∞ m·ª•c run cu·ªëi c√πng
final_backup = os.path.join(SAVE_DIR, f'{RUN_NAME}_final')
if os.path.exists(final_backup):
    shutil.rmtree(final_backup)
shutil.copytree(os.path.join(PROJECT_DIR, RUN_NAME), final_backup)
print("\n‚úÖ Training ho√†n t·∫•t v√† backup sang Drive t·∫°i:", SAVE_DIR)
